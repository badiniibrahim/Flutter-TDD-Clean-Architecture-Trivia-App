// Mocks generated by Mockito 5.4.4 from annotations
// in tdd_flutte_clean_architecture/test/data/repositories/number_trivia_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tdd_flutte_clean_architecture/data/prividers/network/api_provider.dart'
    as _i2;
import 'package:tdd_flutte_clean_architecture/data/prividers/network/api_request_representable.dart'
    as _i5;
import 'package:tdd_flutte_clean_architecture/data/repositories/number_trivia_repository_impl.dart'
    as _i6;
import 'package:tdd_flutte_clean_architecture/domain/entities/number_trivia.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAPIProvider_0 extends _i1.SmartFake implements _i2.APIProvider {
  _FakeAPIProvider_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNumberTrivia_1 extends _i1.SmartFake implements _i3.NumberTrivia {
  _FakeNumberTrivia_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [APIProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIProvider extends _i1.Mock implements _i2.APIProvider {
  MockAPIProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<dynamic> request(_i5.APIRequestRepresentable? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [request],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [NumberTriviaRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaRepositoryImpl extends _i1.Mock
    implements _i6.NumberTriviaRepositoryImpl {
  MockNumberTriviaRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.APIProvider get apiProvider => (super.noSuchMethod(
        Invocation.getter(#apiProvider),
        returnValue: _FakeAPIProvider_0(
          this,
          Invocation.getter(#apiProvider),
        ),
      ) as _i2.APIProvider);

  @override
  _i4.Future<_i3.NumberTrivia> getConcreteNumberTrivia(int? number) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConcreteNumberTrivia,
          [number],
        ),
        returnValue: _i4.Future<_i3.NumberTrivia>.value(_FakeNumberTrivia_1(
          this,
          Invocation.method(
            #getConcreteNumberTrivia,
            [number],
          ),
        )),
      ) as _i4.Future<_i3.NumberTrivia>);

  @override
  _i4.Future<_i3.NumberTrivia> getRandomNumberTrivia() => (super.noSuchMethod(
        Invocation.method(
          #getRandomNumberTrivia,
          [],
        ),
        returnValue: _i4.Future<_i3.NumberTrivia>.value(_FakeNumberTrivia_1(
          this,
          Invocation.method(
            #getRandomNumberTrivia,
            [],
          ),
        )),
      ) as _i4.Future<_i3.NumberTrivia>);
}
